# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload pypi.org

on:
   release:
      types: [ push ]

jobs:
   build_python:
      runs-on: ${{ matrix.platform }}
      strategy:
         max-parallel: 15
         matrix:
            python-version: [
                  2.7,
                  3.5,
                  3.6,
                  3.7,
                  3.8,
                  3.9,
            ]
            exclude:
               -
                  platform:       windows-latest
                  python-version: 2.7

      steps:
         -
            uses: actions/checkout@v2
         -
            name: Setup Python ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
               python-version: ${{ matrix.python-version }}

         -
            name:  Install and Build
            shell: bash
            run:   |
                   python -m pip install -U pip
                   pip install setuptools wheel
                   python setup.py sdist bdist_wheel
                   # python _cross_platform.py #TODO
         -
            name: Save whl file to artifact
            uses: actions/upload-artifact@v2
            with:
               name:           dist
               path:           dist
               retention-days: 5

   build_arm64_python38:
      # The host should always be Linux
      runs-on: ubuntu-20.04
      name:    Build on ubuntu-20.04 aarch64
      steps:
         -
            uses: actions/checkout@v2.1.0
         -
            uses: uraimo/run-on-arch-action@v2.0.5
            name: Run commands
            id:   runcmd
            with:
               arch:        aarch64
               distro:      ubuntu20.04

               # Not required, but speeds up builds by storing container images in
               # a GitHub package registry.
               githubToken: ${{ github.token }}

               # Set an output parameter `uname` for use in subsequent steps
               run:         |
                            uname -a
                            apt-get update
                            apt-get install -y --no-install-recommends build-essential
                            apt-get install -y --no-install-recommends python3-dev python3-pip
                            python3 -m pip install -U pip
                            pip3 install setuptools wheel
                            python3 setup.py bdist_wheel
                            # python3 _cross_platform.py #TODO
         -
            name: Save whl file to artifact
            uses: actions/upload-artifact@v2
            with:
               name:           dist
               path:           dist
               retention-days: 5

   publish:
      needs: [ build_python , build_arm64_python38]
      runs-on: ubuntu-latest
      steps:
         -
            name: download dist from artifact
            uses: actions/download-artifact@v2
            with:
               name: dist
         -
            name:  Publish PyPI
            shell: bash
            env:
               PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
               PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
            run:   |
                   pip install twine
                   python3 -m upload --verbose -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" ./*

